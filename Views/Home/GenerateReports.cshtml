@{
    ViewData["Title"] = "Generate Reports";
    Layout = "~/Views/Shared/_adminlayout.cshtml";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"]</title>
   
    <style>

        /* Reset default margin and padding */
        body, h2, p, button {
            margin: 0;
            padding: 0;
            font-family: 'Sitka Display';
           
            
        }



        /* Container styles */
        .container {
            max-width: 1000px; /* Adjust width as needed */
            margin: 0 auto;
            padding: 20px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
            border-radius: 10px;
            background-color: #f9f9f9;
        }

        /* Header styles */
        h1 {
            font-size: 40px;
            margin-top: 30px;
            margin-bottom: 40px;
            
        }

        /* Section styles */
        section {
            margin-bottom: 30px;
        }

      
        /* Button styles */
        button {
            background-color: #007bff;
            color: #fff;
            border: none;
            padding: 10px 20px;
            cursor: pointer;
            transition: background-color 0.3s ease;
            margin-bottom: 30px;
            margin-top: 30px;
            border-radius: 5px;
            font-size: 16px;
            font-weight: bold;
        }

            button:hover {
                background-color: #0056b3;
            }


    </style>
</head>
<body>
    <div class="container">
        <h1><center>Generate Reports</center></h1>

        <div>
            <h2>Sales by Amount</h2>
            <canvas id="myChart"></canvas>
            <button onclick="downloadPDF('myChart', 'Sales_by_Amount')">Download as PDF</button>
        </div>

        <div>
            <h2>Orders by Quantity</h2>
            <canvas id="anotherChart"></canvas>
            <button onclick="downloadPDF('anotherChart', 'Orders_by_Quantity')">Download as PDF</button>
        </div>

        <div>
            <h2>Sales by Book</h2>
            <canvas id="salesByBookChart"></canvas>
            <button onclick="downloadPDF('salesByBookChart', 'Sales_by_Book')">Download as PDF</button>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/html2pdf.js/0.9.2/html2pdf.bundle.min.js"></script>
    <script>
        function downloadPDF(chartId, fileName) {
            var chartCanvas = document.getElementById(chartId);
            html2pdf()
                .from(chartCanvas)
                .set({
                    filename: fileName + '.pdf',
                    html2canvas: { scale: 4 },
                    jsPDF: { unit: 'in', format: 'letter', orientation: 'landscape' }
                })
                .save();
        }

        document.addEventListener("DOMContentLoaded", function () {
            fetch("/Reports/GetOrderData")
                .then(response => response.json())
                .then(data => {
                    var dates = data.map(item => item.date);
                    var amounts = data.map(item => item.amount);

                    var ctx = document.getElementById('myChart').getContext('2d');
                    new Chart(ctx, {
                        type: 'line',
                        data: {
                            labels: dates,
                            datasets: [{
                                label: 'Order Amount',
                                data: amounts,
                                borderColor: 'rgb(75, 192, 192)',
                                tension: 0.1
                            }]
                        },
                        options: {
                            scales: {
                                y: {
                                    beginAtZero: true
                                }
                            }
                        }
                    });
                })
                .catch(error => console.error('Error fetching order data:', error));

            fetch("/Reports/GetAnotherChartData")
                .then(response => response.json())
                .then(data => {
                    var dates = data.map(item => item.date);
                    var quantities = data.map(item => item.quantity);

                    var ctx = document.getElementById('anotherChart').getContext('2d');
                    new Chart(ctx, {
                        type: 'bar',
                        data: {
                            labels: dates,
                            datasets: [{
                                label: 'Order Quantity',
                                data: quantities,
                                backgroundColor: 'rgba(255, 99, 132, 0.2)',
                                borderColor: 'rgba(255, 99, 132, 1)',
                                borderWidth: 1
                            }]
                        },
                        options: {
                            scales: {
                                y: {
                                    beginAtZero: true
                                }
                            }
                        }
                    });
                })
                .catch(error => console.error('Error fetching order data:', error));

            fetch("/Reports/GetSalesByBook")
                .then(response => response.json())
                .then(data => {
                    var bookTitles = data.map(item => item.bookTitle);
                    var totalSales = data.map(item => item.totalSales);

                    var ctx = document.getElementById('salesByBookChart').getContext('2d');
                    new Chart(ctx, {
                        type: 'pie',
                        data: {
                            labels: bookTitles,
                            datasets: [{
                                label: 'Total Sales',
                                data: totalSales,
                                backgroundColor: [
                                    'rgba(255, 99, 132, 0.5)',
                                    'rgba(54, 162, 235, 0.5)',
                                    'rgba(255, 206, 86, 0.5)',
                                    'rgba(75, 192, 192, 0.5)',
                                    'rgba(153, 102, 255, 0.5)',
                                    'rgba(255, 159, 64, 0.5)'
                                ],
                                borderColor: [
                                    'rgba(255, 99, 132, 1)',
                                    'rgba(54, 162, 235, 1)',
                                    'rgba(255, 206, 86, 1)',
                                    'rgba(75, 192, 192, 1)',
                                    'rgba(153, 102, 255, 1)',
                                    'rgba(255, 159, 64, 1)'
                                ],
                                borderWidth: 1
                            }]
                        }
                    });
                })
                .catch(error => console.error('Error fetching sales data:', error));
        });
    </script>
</body>
</html>
