

@{
    ViewData["Title"] = "Manage Books";
    Layout = "~/Views/Shared/_adminlayout.cshtml";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"]</title>
    <link rel="stylesheet" href="/css/book.css?v=1.0.0">

</head>
<body>

    <div class="container">
        <h1>Manage Books</h1>

        <!-- Form for adding a new book -->
        <form id="addBookForm" method="post" action="/Book/AddBook">
            <!-- form fields for adding a book -->
            <div class="form-group">
                <label for="title">Title:</label>
                <input type="text" class="form-control" id="title" name="title" required />
            </div>
            <div class="form-group">
                <label for="author">Author:</label>
                <input type="text" class="form-control" id="author" name="author" />
            </div>
            <div class="form-group">
                <label for="isbn">ISBN:</label>
                <input type="text" class="form-control" id="isbn" name="isbn" required />
            </div>
            <div class="form-group">
                <label for="year">Year:</label>
                <input type="number" class="form-control" id="year" name="year" required />
            </div>
            <div class="form-group">
                <label for="price">Price:</label>
                <input type="number" class="form-control" id="price" name="price" step="0.01" required />
            </div>
            <div class="form-group">
                <label for="quantity">Quantity:</label>
                <input type="number" class="form-control" id="quantity" name="quantity" required />
            </div>
            <div class="form-group">
                <label for="description">Description:</label>
                <textarea class="form-control" id="description" name="description"></textarea>
            </div>
            <div class="form-group">
                <label for="categories">Categories:</label>
                <input type="text" class="form-control" id="categories" name="categories" required />
            </div>

            <button type="submit" class="btn btn-primary">Add Book</button>

            <!-- Success message -->
            @if (!string.IsNullOrEmpty(ViewBag.AddSuccessMessage))
            {
                <div class="alert alert-success" role="alert">
                    @ViewBag.AddSuccessMessage
                </div>
            }
            <!-- Error message -->
            @if (!string.IsNullOrEmpty(ViewBag.ErrorMessage))
            {
                <div class="alert alert-danger" role="alert">
                    @ViewBag.ErrorMessage
                </div>
            }
        </form>


        <form id="deleteBookForm" method="post" action="/Book/DeleteBook">
            <div class="form-group">
                <label for="deleteBookId">Enter Book ID to Delete:</label>
                <input type="number" class="form-control" id="deleteBookId" name="id" required />
            </div>
            <button type="submit" class="btn btn-danger">Delete Book</button>

            <!-- Success message -->
            @if (!string.IsNullOrEmpty(ViewBag.DeleteSuccessMessage))
            {
                <div class="alert alert-success" role="alert">
                    @ViewBag.DeleteSuccessMessage
                </div>
            }
            <!-- Error message -->
            @if (!string.IsNullOrEmpty(ViewBag.ErrorMessage))
            {
                <div class="alert alert-danger" role="alert">
                    @ViewBag.ErrorMessage
                </div>
            }
        </form>

        <!-- Form for updating a book -->
        <form id="updateBookForm" method="post" action="/Book/UpdateBook">
            <div class="form-group">
                <label for="updateBookId">Enter Book ID to Update:</label>
                <input type="number" class="form-control" id="updateBookId" name="id" required />
            </div>
            <div class="form-group">
                <label for="updateTitle">Title:</label>
                <input type="text" class="form-control" id="updateTitle" name="title" />
            </div>
            <div class="form-group">
                <label for="updateAuthor">Author:</label>
                <input type="text" class="form-control" id="updateAuthor" name="author" />
            </div>
            <div class="form-group">
                <label for="updateISBN">ISBN:</label>
                <input type="text" class="form-control" id="updateISBN" name="isbn" />
            </div>
            <div class="form-group">
                <label for="updateYear">Year:</label>
                <input type="number" class="form-control" id="updateYear" name="year" />
            </div>
            <div class="form-group">
                <label for="updatePrice">Price:</label>
                <input type="number" class="form-control" id="updatePrice" name="price" step="0.01" />
            </div>
            <div class="form-group">
                <label for="updateQuantity">Quantity:</label>
                <input type="number" class="form-control" id="updateQuantity" name="quantity" />
            </div>
            <div class="form-group">
                <label for="updateDescription">Description:</label>
                <textarea class="form-control" id="updateDescription" name="description"></textarea>
            </div>
            <div class="form-group">
                <label for="updateCategories">Categories:</label>
                <input type="text" class="form-control" id="updateCategories" name="categories" />
            </div>
            <button type="submit" class="btn btn-warning">Update Book</button>

            <!-- Success message -->
            @if (!string.IsNullOrEmpty(ViewBag.UpdateSuccessMessage))
            {
                <div class="alert alert-success" role="alert">
                    @ViewBag.UpdateSuccessMessage
                </div>
            }
            <!-- Error message -->
            @if (!string.IsNullOrEmpty(ViewBag.ErrorMessage))
            {
                <div class="alert alert-danger" role="alert">
                    @ViewBag.ErrorMessage
                </div>
            }


        </form>


        <button id="toggleTableButton" class="btn btn-secondary">Show/Hide Table</button>

       

        <div id="bookTableContainer" style="display: none;">
            <!-- Search Form -->
            <div class="row mb-3">
                <div class="col-md-6 offset-md-3">
                    <form id="searchForm">
                        <div class="input-group">
                            <input type="text" class="form-control" placeholder="Search for books..." id="searchInput">
                            <button type="submit" class="btn btn-primary">Search</button>
                        </div>
                    </form>
                </div>
            </div>

            <!-- Search Results Container -->
            <div id="searchResultsContainer">
                <!-- Search results will be loaded here -->
            </div>
            <table id="bookTable" class="table">
                
                <tbody id="bookTableBody">
                    <!-- Data will be loaded here -->
                </tbody>

            </table>
        </div>

        <script>
            document.addEventListener("DOMContentLoaded", function () {
                var toggleTableButton = document.getElementById("toggleTableButton");
                var bookTableContainer = document.getElementById("bookTableContainer");
                var bookTableBody = document.getElementById("bookTableBody");

                toggleTableButton.addEventListener("click", function () {
                    if (bookTableContainer.style.display === "none") {
                        bookTableContainer.style.display = "block";
                        loadData(); // Call function to load data into the table
                    } else {
                        bookTableContainer.style.display = "none";
                    }
                });

                function loadData() {
                    // Fetch data from server
                    fetch("/Book/GetBooks")
                        .then(response => response.json())
                        .then(data => {
                            // Clear existing table rows
                            bookTableBody.innerHTML = "";

                            // Populate container with fetched data
                            data.forEach(book => {
                                var bookDiv = document.createElement("div");
                                bookDiv.classList.add("book-item");

                                var bookDetailParagraph = document.createElement("p");
                                bookDetailParagraph.innerHTML = `
                                <strong>Book ID:</strong> ${book.id}<br>
                                <strong>Title:</strong> ${book.title}<br>
                                <strong>Author:</strong> ${book.author}<br>
                                <strong>ISBN:</strong> ${book.isbn}<br>
                                <strong>Year:</strong> ${book.year}<br>
                                <strong>Price:</strong> ${book.price}<br>
                                <strong>Quantity:</strong> ${book.quantity}<br>
                                <strong>Description:</strong> ${book.description}<br>
                                <strong>Categories:</strong> ${book.categories}
                            `;

                                bookDiv.appendChild(bookDetailParagraph);
                                bookTableBody.appendChild(bookDiv);
                            });
                        })
                        .catch(error => console.error('Error fetching data:', error));
                }


                var searchForm = document.getElementById("searchForm");

                searchForm.addEventListener("submit", function (event) {
                    event.preventDefault(); // Prevent default form submission behavior

                    var searchInput = document.getElementById("searchInput").value;

                    // Call function to search for books
                    searchBooks(searchInput);
                });

                function searchBooks(title) {
                    fetch(`/Customer/SearchBooks?title=${encodeURIComponent(title)}`)
                        .then(response => response.json())
                        .then(data => {
                            var searchResultsContainer = document.getElementById("searchResultsContainer");
                            searchResultsContainer.innerHTML = ""; // Clear existing content

                            if (data.length === 0) {
                                searchResultsContainer.innerHTML = "<p>No results found.</p>";
                                return;
                            }

                            // Populate container with fetched data
                            data.forEach(book => {
                                var bookDiv = document.createElement("div");
                                bookDiv.innerHTML = `
                                                <p><strong>ID:</strong> ${book.id}</p>
                                                <p><strong>Title:</strong> ${book.title}</p>
                                                <p><strong>Author:</strong> ${book.author}</p>
                                                <p><strong>ISBN:</strong> ${book.isbn}</p>
                                                <p><strong>Year:</strong> ${book.year}</p>
                                                <p><strong>Price:</strong> ${book.price}</p>
                                                <p><strong>Quantity:</strong> ${book.quantity}</p>
                                                <p><strong>Description:</strong> ${book.description}</p>
                                                <p><strong>Categories:</strong> ${book.categories}</p>
                                                <hr>`;
                                searchResultsContainer.appendChild(bookDiv);
                            });

                            // Clear the search input field
                            document.getElementById("searchInput").value = "";

                        })
                        .catch(error => console.error('Error fetching search results:', error));
                }


            });

        </script>



        
        


    </div>

</body>
</html>
